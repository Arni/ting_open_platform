<?php

/**
 * @file
 * Enables search integration with Ting.
 */



/**
 * Implements hook_ctools_plugin_directory().
 *
 * It simply tells panels where to find the .inc files that define various
 * args, contexts, content_types.
 */
function ting_open_platform_ctools_plugin_directory($module, $plugin) {
  if ($module == 'ctools' && !empty($plugin)) {
    return "plugins/$plugin";
  }
}

function ting_open_platform_theme($existing, $type, $theme, $path) {
  return array(
    'ting_open_platform_covers' => array(
      'variables' => array('results' => NULL),
      'template'  => 'covers-search-result',
      'path' => $path . '/templates',
    ),
  );
}


function ting_open_platform_search($query) {
  $parameters = array(
    "fields" => array(
      "title",
      "creator",
      "pid",
      'coverUrlFull',
    ),
    "pretty" => true,
    "timings" => true,
    "q" => $query,
    "offset" => 0,
    "limit" => 20,
    "sort" => "date_descending",
  );
  return ting_open_platform_request('search', $parameters);
}

function ting_open_platform_search_collection($query) {
  $parameters = array(
    "fields" => array(
      "title",
      "collection",
      "creator",
      "pid",
    ),
    "pretty" => true,
    "q" => $query,
    "offset" => 0,
    "limit" => 10,
  );
  return ting_open_platform_request('search', $parameters);
}

function ting_open_platform_recommender($ids, $number_of_objects = 20) {
  $parameters = array(
    "fields" => array(
      "title",
      "creator",
      "pid",
    ),
    "pretty" => true,
    "like" => $ids,
    "recommender" => 'default',
    "limit" => $number_of_objects,
  );
  return ting_open_platform_request('recommend', $parameters);
}

function ting_open_platform_render_cover($data) {
  $results = array();
  foreach ($data as $object) {
    if (isset($object->coverUrlFull)) {
      $image = '<img src="' . $object->coverUrlFull[0]  . '" width="140" height="203" styling="height:203px">';
      $results[] = array(
      'snippet' => $image 
      );
    }  
  }  
  $content = theme('ting_open_platform_covers', array('results' => $results)); 
  return $content;
}


function ting_open_platform_get_token() {
  $key = "1ba2428f-1fc3-4159-82ff-869b87026bcd";
  $secret = "3ab379e23032f8e94599ba2a75be13a4d49e846342d101a6899b27b823abff1e";

// request token
  $basic_credentials = base64_encode($key.':'.$secret);
  $tk = curl_init('https://auth.dbc.dk/oauth/token');
  curl_setopt($tk, CURLOPT_HTTPHEADER, array('Authorization: Basic '.$basic_credentials, 'Content-Type: application/x-www-form-urlencoded;charset=UTF-8'));
  curl_setopt($tk, CURLOPT_POSTFIELDS, 'grant_type=password&username=@773000&password=@773000');
  curl_setopt($tk, CURLOPT_RETURNTRANSFER, true);
  $token = json_decode(curl_exec($tk));
  curl_close($tk);  
  return $token;
}

function ting_open_platform_request($operation, $parameters) {
  $token = variable_get('ting_open_platform_token', '8fcb2229d117ac2912fec4d272df3986cb415140');
  $parameters['access_token'] = '6c29a4e96187cd8951e85202f05a01f09eaf65ee';
  $service_url = 'https://openplatform.dbc.dk/v1/' . $operation;
  
  $curl = curl_init($service_url);
  curl_setopt($curl, CURLOPT_HTTPHEADER, array(                                                                          
    'Content-Type: application/json',                                                                                
    'Accept: application/json')                                                                       
  ); 
  curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
  curl_setopt($curl, CURLOPT_POST, true);
  curl_setopt($curl, CURLOPT_POSTFIELDS, json_encode($parameters));
  $curl_response = curl_exec($curl);
  if ($curl_response === false) {
    $info = curl_getinfo($curl);
    curl_close($curl);
  }
  curl_close($curl);
  $decoded = json_decode($curl_response);
  if (isset($decoded->response->status) && $decoded->response->status == 'ERROR') {
    //TODO Handle error
  }
  return  $decoded;
}


